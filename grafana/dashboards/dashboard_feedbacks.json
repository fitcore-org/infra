{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 2,
  "links": [],
  "panels": [
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "fitcore_postgres_ds"
      },
      "gridPos": {
        "h": 16,
        "w": 12,
        "x": 0,
        "y": 0
      },
      "id": 3,
      "options": {
        "baidu": {
          "callback": "bmapReady",
          "key": ""
        },
        "editor": {
          "format": "auto"
        },
        "editorMode": "code",
        "gaode": {
          "key": "",
          "plugin": "AMap.Scale,AMap.ToolBar"
        },
        "getOption": "// --- 0. VERIFICAÇÃO DE SEGURANÇA ---\n// Mantemos esta verificação para evitar erros se a query não retornar dados.\nif (!context.panel.data || context.panel.data.series.length === 0) {\n  return {\n    title: {\n      text: 'Sem dados para exibir',\n      left: 'center', top: 'center', textStyle: { color: '#888' }\n    }\n  };\n}\n\n\n// --- 1. MAPEAMENTO E TRANSFORMAÇÃO DE DADOS ---\n\n// Mapeia os valores do banco para nomes legíveis.\nconst sentimentMap = {\n  positive: 'Positivo',\n  negative: 'Negativo',\n  neutral: 'Neutro'\n};\n\n// --- NOVA PALETA DE CORES ---\n// Define as cores, incluindo o verde específico que você pediu.\nconst colorMap = {\n  'Positivo': 'rgba(34, 197, 94, 1)', // O seu verde: #2ca02c\n  'Negativo': '#d62728',         // Um vermelho que combina bem\n  'Neutro': '#7f7f7f'          // Um cinza neutro\n};\n\nconst seriesData = context.panel.data.series[0];\nconst sentiments = seriesData.fields.find(f => f.type === 'string').values;\nconst quantities = seriesData.fields.find(f => f.type === 'number').values;\n\nconst pieData = quantities.map((value, index) => {\n  const rawSentiment = sentiments[index];\n  const translatedName = sentimentMap[rawSentiment] || rawSentiment;\n\n  return {\n    value: value,\n    name: translatedName,\n    itemStyle: {\n      color: colorMap[translatedName] || '#808080'\n    }\n  };\n});\n\n\n// --- 2. CONFIGURAÇÃO DO GRÁFICO (ECHARTS) ---\n\nreturn {\n  backgroundColor: 'transparent',\n\n  // --- TÍTULO INTEGRADO ---\n  title: {\n    text: 'Sentimentos dos Alunos',\n    left: 'center',\n    top: '5%', // Posição no topo\n    textStyle: {\n      color: '#EEEEEE',\n      fontSize: 18,\n      fontWeight: 'bold'\n    }\n  },\n\n  tooltip: {\n    trigger: 'item',\n    formatter: '{a} <br/>{b}: {c} ({d}%)'\n  },\n\n  legend: {\n    show: false\n  },\n\n  series: [{\n    name: 'Sentimentos',\n    type: 'pie',\n    // --- ESTILO DONUT ---\n    // O primeiro valor é o tamanho do buraco, o segundo é o tamanho total.\n    radius: ['45%', '75%'],\n    center: ['50%', '55%'], // Deslocado um pouco para baixo para dar espaço ao título\n\n    // Evita que os rótulos fiquem muito pequenos e sobrepostos\n    minAngle: 5,\n\n    // --- ESTILO SOMBREADO E MODERNO ---\n    itemStyle: {\n      // Cantos arredondados entre as fatias\n      borderRadius: 10,\n      // Borda para criar um efeito de espaçamento\n      borderColor: '#1e1e1e', // Cor de fundo do seu dashboard\n      borderWidth: 5,\n      // Sombra para dar profundidade ao gráfico\n      shadowBlur: 20,\n      shadowColor: 'rgba(0, 0, 0, 0.4)'\n    },\n\n    data: pieData,\n\n    label: {\n      show: true,\n      position: 'inside',\n      formatter: '{b}\\n{d}%',\n      color: '#FFFFFF',\n      fontSize: 14,\n      fontWeight: 'bold',\n      // Sombra no texto para melhor legibilidade\n      textShadowBlur: 5,\n      textShadowColor: '#000'\n    },\n\n    // --- EFEITO DE DESTAQUE (HOVER) APRIMORADO ---\n    emphasis: {\n      label: {\n        show: true,\n        fontSize: 16, // Aumenta a fonte do rótulo ao passar o mouse\n      },\n      itemStyle: {\n        shadowBlur: 30, // Aumenta a sombra\n        borderColor: '#333'\n      }\n    }\n  }]\n};",
        "google": {
          "callback": "gmapReady",
          "key": ""
        },
        "map": "none",
        "renderer": "canvas",
        "themeEditor": {
          "config": "{}",
          "name": "default"
        },
        "visualEditor": {
          "code": "return {\n  dataset: context.editor.dataset,\n  series: context.editor.series,\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n}\n",
          "dataset": [],
          "series": []
        }
      },
      "pluginVersion": "7.0.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "fitcore_postgres_ds"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT sentiment, COUNT(*) AS quantidade\r\nFROM feedback\r\nGROUP BY sentiment\r\n",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "transparent": true,
      "type": "volkovlabs-echarts-panel"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "fitcore_postgres_ds"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "fieldMinMax": false
        },
        "overrides": []
      },
      "gridPos": {
        "h": 17,
        "w": 12,
        "x": 12,
        "y": 0
      },
      "id": 1,
      "options": {
        "baidu": {
          "callback": "bmapReady",
          "key": ""
        },
        "editor": {
          "format": "auto"
        },
        "editorMode": "code",
        "gaode": {
          "key": "",
          "plugin": "AMap.Scale,AMap.ToolBar"
        },
        "getOption": "// Pega a primeira série de dados retornada pela sua query\nconst series = context.panel.data.series[0];\n\nif (!series || !series.fields) return {};\n\nconst wordField = series.fields.find(f => f.name === 'word');\nconst frequencyField = series.fields.find(f => f.name === 'frequency');\nconst sentimentField = series.fields.find(f => f.name === 'sentiment');\n\nif (!wordField || !frequencyField || !sentimentField) return {};\n\nconst data = [];\nfor (let i = 0; i < series.length; i++) {\n  const sentiment = sentimentField.values[i];\n  let color;\n\n  if (sentiment === 'positive') {\n    color = 'rgba(34, 197, 94, 1)';\n  } else if (sentiment === 'negative') {\n    color = '#d62728';\n  } else {\n    color = '#808080';\n  }\n\n  data.push({\n    name: wordField.values[i],\n    value: frequencyField.values[i],\n    textStyle: {\n      color: color\n    }\n  });\n}\n\nreturn {\n  title: {\n    text: 'Palavras frequentes nos feedbacks',\n    left: 'center',\n    top: '2%', // afasta mais do topo\n    textStyle: {\n      color: '#EEEEEE',\n      fontSize: 20,  // aumentado para dar mais destaque\n      fontWeight: 'bold normal',\n    }\n  },\n\n  tooltip: {\n    formatter: function (params) {\n      return `Palavra: <strong>${params.name}</strong><br/>Frequência: <strong>${params.value}</strong>`;\n    }\n  },\n\n  series: [{\n    type: 'wordCloud',\n    shape: 'circle',\n\n    gridSize: 15,\n    sizeRange: [20, 95],\n    rotationRange: [0, 0],\n    drawOutOfBound: false,\n\n    // ⬇ desloca a nuvem para baixo (evita sobreposição com o título)\n    top: '12%',\n\n    textStyle: {\n      fontFamily: 'sans-serif',\n      fontWeight: 'bold',\n    },\n\n    emphasis: {\n      focus: 'self',\n      textStyle: {\n        textShadowBlur: 10,\n        textShadowColor: '#333'\n      }\n    },\n\n    data: data\n  }]\n};\n",
        "google": {
          "callback": "gmapReady",
          "key": ""
        },
        "map": "none",
        "renderer": "canvas",
        "themeEditor": {
          "config": "{}",
          "name": "default"
        },
        "visualEditor": {
          "code": "return {\n  dataset: context.editor.dataset,\n  series: context.editor.series,\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n}\n",
          "dataset": [],
          "series": []
        }
      },
      "pluginVersion": "7.0.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "fitcore_postgres_ds"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT\r\n  word,\r\n  frequency,\r\n  sentiment \r\nFROM\r\n  word_frequency",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "transparent": true,
      "type": "volkovlabs-echarts-panel"
    }
  ],
  "refresh": "5m",
  "schemaVersion": 39,
  "tags": [],
  "templating": {
    "list": []
  },
  "time": {
    "from": "now/M",
    "to": "now/M"
  },
  "timepicker": {},
  "timezone": "browser",
  "title": "Análise dos Feedbacks",
  "uid": "detc98fmewmioc",
  "version": 2,
  "weekStart": ""
}